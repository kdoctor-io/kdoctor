//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentSpec) DeepCopyInto(out *AgentSpec) {
	*out = *in
	if in.Annotation != nil {
		in, out := &in.Annotation, &out.Annotation
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DeploymentReplicas != nil {
		in, out := &in.DeploymentReplicas, &out.DeploymentReplicas
		*out = new(int32)
		**out = **in
	}
	if in.Affinity != nil {
		in, out := &in.Affinity, &out.Affinity
		*out = new(v1.Affinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(v1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	if in.PersistentVolumeClaim != nil {
		in, out := &in.PersistentVolumeClaim, &out.PersistentVolumeClaim
		*out = new(v1.PersistentVolumeClaimVolumeSource)
		**out = **in
	}
	if in.TerminationGracePeriodSeconds != nil {
		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentSpec.
func (in *AgentSpec) DeepCopy() *AgentSpec {
	if in == nil {
		return nil
	}
	out := new(AgentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHttpHealthy) DeepCopyInto(out *AppHttpHealthy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHttpHealthy.
func (in *AppHttpHealthy) DeepCopy() *AppHttpHealthy {
	if in == nil {
		return nil
	}
	out := new(AppHttpHealthy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppHttpHealthy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHttpHealthyList) DeepCopyInto(out *AppHttpHealthyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppHttpHealthy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHttpHealthyList.
func (in *AppHttpHealthyList) DeepCopy() *AppHttpHealthyList {
	if in == nil {
		return nil
	}
	out := new(AppHttpHealthyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppHttpHealthyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHttpHealthySpec) DeepCopyInto(out *AppHttpHealthySpec) {
	*out = *in
	in.AgentSpec.DeepCopyInto(&out.AgentSpec)
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(SchedulePlan)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(AppHttpHealthyTarget)
		(*in).DeepCopyInto(*out)
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(NetHttpRequest)
		**out = **in
	}
	if in.SuccessCondition != nil {
		in, out := &in.SuccessCondition, &out.SuccessCondition
		*out = new(NetSuccessCondition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHttpHealthySpec.
func (in *AppHttpHealthySpec) DeepCopy() *AppHttpHealthySpec {
	if in == nil {
		return nil
	}
	out := new(AppHttpHealthySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppHttpHealthyTarget) DeepCopyInto(out *AppHttpHealthyTarget) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.TlsSecret != nil {
		in, out := &in.TlsSecret, &out.TlsSecret
		*out = new(string)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppHttpHealthyTarget.
func (in *AppHttpHealthyTarget) DeepCopy() *AppHttpHealthyTarget {
	if in == nil {
		return nil
	}
	out := new(AppHttpHealthyTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetDnsTarget) DeepCopyInto(out *NetDnsTarget) {
	*out = *in
	if in.NetDnsTargetUser != nil {
		in, out := &in.NetDnsTargetUser, &out.NetDnsTargetUser
		*out = new(NetDnsTargetUserSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.NetDnsTargetDns != nil {
		in, out := &in.NetDnsTargetDns, &out.NetDnsTargetDns
		*out = new(NetDnsTargetDnsSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetDnsTarget.
func (in *NetDnsTarget) DeepCopy() *NetDnsTarget {
	if in == nil {
		return nil
	}
	out := new(NetDnsTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetDnsTargetDnsSpec) DeepCopyInto(out *NetDnsTargetDnsSpec) {
	*out = *in
	if in.ServiceNamespacedName != nil {
		in, out := &in.ServiceNamespacedName, &out.ServiceNamespacedName
		*out = new(string)
		**out = **in
	}
	if in.TestIPv4 != nil {
		in, out := &in.TestIPv4, &out.TestIPv4
		*out = new(bool)
		**out = **in
	}
	if in.TestIPv6 != nil {
		in, out := &in.TestIPv6, &out.TestIPv6
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetDnsTargetDnsSpec.
func (in *NetDnsTargetDnsSpec) DeepCopy() *NetDnsTargetDnsSpec {
	if in == nil {
		return nil
	}
	out := new(NetDnsTargetDnsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetDnsTargetUserSpec) DeepCopyInto(out *NetDnsTargetUserSpec) {
	*out = *in
	if in.Server != nil {
		in, out := &in.Server, &out.Server
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetDnsTargetUserSpec.
func (in *NetDnsTargetUserSpec) DeepCopy() *NetDnsTargetUserSpec {
	if in == nil {
		return nil
	}
	out := new(NetDnsTargetUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetHttpRequest) DeepCopyInto(out *NetHttpRequest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetHttpRequest.
func (in *NetHttpRequest) DeepCopy() *NetHttpRequest {
	if in == nil {
		return nil
	}
	out := new(NetHttpRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetReach) DeepCopyInto(out *NetReach) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetReach.
func (in *NetReach) DeepCopy() *NetReach {
	if in == nil {
		return nil
	}
	out := new(NetReach)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetReach) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetReachList) DeepCopyInto(out *NetReachList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetReach, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetReachList.
func (in *NetReachList) DeepCopy() *NetReachList {
	if in == nil {
		return nil
	}
	out := new(NetReachList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetReachList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetReachSpec) DeepCopyInto(out *NetReachSpec) {
	*out = *in
	in.AgentSpec.DeepCopyInto(&out.AgentSpec)
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(SchedulePlan)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(NetReachTarget)
		(*in).DeepCopyInto(*out)
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(NetHttpRequest)
		**out = **in
	}
	if in.SuccessCondition != nil {
		in, out := &in.SuccessCondition, &out.SuccessCondition
		*out = new(NetSuccessCondition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetReachSpec.
func (in *NetReachSpec) DeepCopy() *NetReachSpec {
	if in == nil {
		return nil
	}
	out := new(NetReachSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetReachTarget) DeepCopyInto(out *NetReachTarget) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(bool)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetReachTarget.
func (in *NetReachTarget) DeepCopy() *NetReachTarget {
	if in == nil {
		return nil
	}
	out := new(NetReachTarget)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetSuccessCondition) DeepCopyInto(out *NetSuccessCondition) {
	*out = *in
	if in.SuccessRate != nil {
		in, out := &in.SuccessRate, &out.SuccessRate
		*out = new(float64)
		**out = **in
	}
	if in.MeanAccessDelayInMs != nil {
		in, out := &in.MeanAccessDelayInMs, &out.MeanAccessDelayInMs
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetSuccessCondition.
func (in *NetSuccessCondition) DeepCopy() *NetSuccessCondition {
	if in == nil {
		return nil
	}
	out := new(NetSuccessCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Netdns) DeepCopyInto(out *Netdns) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Netdns.
func (in *Netdns) DeepCopy() *Netdns {
	if in == nil {
		return nil
	}
	out := new(Netdns)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Netdns) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetdnsList) DeepCopyInto(out *NetdnsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Netdns, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetdnsList.
func (in *NetdnsList) DeepCopy() *NetdnsList {
	if in == nil {
		return nil
	}
	out := new(NetdnsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetdnsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetdnsRequest) DeepCopyInto(out *NetdnsRequest) {
	*out = *in
	if in.DurationInSecond != nil {
		in, out := &in.DurationInSecond, &out.DurationInSecond
		*out = new(uint64)
		**out = **in
	}
	if in.QPS != nil {
		in, out := &in.QPS, &out.QPS
		*out = new(uint64)
		**out = **in
	}
	if in.PerRequestTimeoutInMS != nil {
		in, out := &in.PerRequestTimeoutInMS, &out.PerRequestTimeoutInMS
		*out = new(uint64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetdnsRequest.
func (in *NetdnsRequest) DeepCopy() *NetdnsRequest {
	if in == nil {
		return nil
	}
	out := new(NetdnsRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetdnsSpec) DeepCopyInto(out *NetdnsSpec) {
	*out = *in
	in.AgentSpec.DeepCopyInto(&out.AgentSpec)
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(SchedulePlan)
		(*in).DeepCopyInto(*out)
	}
	if in.SourceAgentNodeSelector != nil {
		in, out := &in.SourceAgentNodeSelector, &out.SourceAgentNodeSelector
		*out = new(metav1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(NetDnsTarget)
		(*in).DeepCopyInto(*out)
	}
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = new(NetdnsRequest)
		(*in).DeepCopyInto(*out)
	}
	if in.SuccessCondition != nil {
		in, out := &in.SuccessCondition, &out.SuccessCondition
		*out = new(NetSuccessCondition)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetdnsSpec.
func (in *NetdnsSpec) DeepCopy() *NetdnsSpec {
	if in == nil {
		return nil
	}
	out := new(NetdnsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulePlan) DeepCopyInto(out *SchedulePlan) {
	*out = *in
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulePlan.
func (in *SchedulePlan) DeepCopy() *SchedulePlan {
	if in == nil {
		return nil
	}
	out := new(SchedulePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusHistoryRecord) DeepCopyInto(out *StatusHistoryRecord) {
	*out = *in
	in.StartTimeStamp.DeepCopyInto(&out.StartTimeStamp)
	if in.EndTimeStamp != nil {
		in, out := &in.EndTimeStamp, &out.EndTimeStamp
		*out = (*in).DeepCopy()
	}
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	in.DeadLineTimeStamp.DeepCopyInto(&out.DeadLineTimeStamp)
	if in.ExpectedActorNumber != nil {
		in, out := &in.ExpectedActorNumber, &out.ExpectedActorNumber
		*out = new(int)
		**out = **in
	}
	if in.FailedAgentNodeList != nil {
		in, out := &in.FailedAgentNodeList, &out.FailedAgentNodeList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SucceedAgentNodeList != nil {
		in, out := &in.SucceedAgentNodeList, &out.SucceedAgentNodeList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NotReportAgentNodeList != nil {
		in, out := &in.NotReportAgentNodeList, &out.NotReportAgentNodeList
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusHistoryRecord.
func (in *StatusHistoryRecord) DeepCopy() *StatusHistoryRecord {
	if in == nil {
		return nil
	}
	out := new(StatusHistoryRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskStatus) DeepCopyInto(out *TaskStatus) {
	*out = *in
	if in.ExpectedRound != nil {
		in, out := &in.ExpectedRound, &out.ExpectedRound
		*out = new(int64)
		**out = **in
	}
	if in.DoneRound != nil {
		in, out := &in.DoneRound, &out.DoneRound
		*out = new(int64)
		**out = **in
	}
	if in.LastRoundStatus != nil {
		in, out := &in.LastRoundStatus, &out.LastRoundStatus
		*out = new(string)
		**out = **in
	}
	if in.History != nil {
		in, out := &in.History, &out.History
		*out = make([]StatusHistoryRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskStatus.
func (in *TaskStatus) DeepCopy() *TaskStatus {
	if in == nil {
		return nil
	}
	out := new(TaskStatus)
	in.DeepCopyInto(out)
	return out
}
